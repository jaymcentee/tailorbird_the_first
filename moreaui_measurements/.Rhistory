geom_tiplab(aes(subset = (node == 14), label = "mediocris S"), hjust = -1.38) +
geom_tiplab(offset = .004) +
geom_tiplab(aes(subset = (node == 6), label = "loveridgei"), hjust = -1.73) +
geom_cladelabel(node = 28, label = "usambarica", align = T, offset = .017) +
geom_cladelabel(node = 23, label = "fuelleborni", align = T, offset = .017) +
geom_cladelabel(node = 19, label = "moreaui", align = T, offset = .017) +
geom_point2(aes(subset=(node==14), x = branch), size=0.257*7, shape=23, fill="#0072B2", alpha = 0.7) +
geom_text2(aes(subset=(node==14), x = branch, label = round(support, 2)), nudge_x = 0, nudge_y = .43) +
geom_point2(aes(subset=(node==23), x = branch), size=0.87*7, shape=23, fill="#0072B2", alpha = 0.7) +
geom_text2(aes(subset=(node==23), x = branch, label = paste(round(support, 2), "*", sep = "")), nudge_x = 0, nudge_y = .43) +
annotate(geom = "text", x = 0.013, y = 4.3, label = "Log song duration") +
geom_rootpoint(shape = 95, size = 6)
p <- p %<+% data + geom_tippoint(aes(x = x + 0.002, size = ln_song_duration), alpha = 0.5)
p + theme(legend.position = c(.15, .16), legend.title = element_blank())
dev.off()
png(filename = "log_duration_pulse_support_tree_2.png", width = 7, height = 7, units = "in", res = 600)
p <- ggtree(phy1, ladderize = F) + xlim(0, 0.1) +
geom_tiplab(aes(subset = (node == 15), label = "mediocris N"), hjust = -1.4) +
geom_tiplab(aes(subset = (node == 14), label = "mediocris S"), hjust = -1.4) +
geom_tiplab(offset = .004) +
geom_tiplab(aes(subset = (node == 6), label = "loveridgei"), hjust = -1.73) +
geom_cladelabel(node = 28, label = "usambarica", align = T, offset = .017) +
geom_cladelabel(node = 23, label = "fuelleborni", align = T, offset = .017) +
geom_cladelabel(node = 19, label = "moreaui", align = T, offset = .017) +
geom_point2(aes(subset=(node==14), x = branch), size=0.257*7, shape=23, fill="#0072B2", alpha = 0.7) +
geom_text2(aes(subset=(node==14), x = branch, label = round(support, 2)), nudge_x = 0, nudge_y = .43) +
geom_point2(aes(subset=(node==23), x = branch), size=0.87*7, shape=23, fill="#0072B2", alpha = 0.7) +
geom_text2(aes(subset=(node==23), x = branch, label = paste(round(support, 2), "*", sep = "")), nudge_x = 0, nudge_y = .43) +
annotate(geom = "text", x = 0.013, y = 4.3, label = "Log song duration") +
geom_rootpoint(shape = 95, size = 6)
p <- p %<+% data + geom_tippoint(aes(x = x + 0.002, size = ln_song_duration), alpha = 0.5)
p + theme(legend.position = c(.15, .16), legend.title = element_blank())
dev.off()
data <- read.csv("/Users/jaymcentee/Dropbox/Chapter1/song_data_files/ind.median.gap.after.pop.csv", header = 0)
colnames(data) <- c("pop", "median_pause_duration", "var_median_pause_duration")
data$pop <- as.character(data$pop)
data$pop[which(data$pop == "SouthPare")] <- "Shengena"
phy1 <- read.newick("~/Dropbox/Chapter1/final_analyses/boat/UPGMA_song_match_2_fakesupports.nwk",
node.label = "support")
df <- phy1@data
#
df2 <- merge(df, edge, by.x = "node", by.y = "V1", all.x = F, all.y = T)
df3 <- df2[, c(3,2)]
colnames(df3) = colnames(df)
df4 <- rbind(df3, df)
df4 <- df4[order(df4$node),]
df4$support <- pulses$Median_pause_duration
df4 <- as_tibble(df4)
phy1@data <- df4
png(filename = "median_pause_duration_pulse_support_tree2.png", width = 7, height = 7, units = "in", res = 600)
p <- ggtree(phy1, ladderize = F) + xlim(0, 0.1) +
geom_tiplab(aes(subset = (node == 15), label = "mediocris N"), hjust = -1.58) +
geom_tiplab(aes(subset = (node == 14), label = "mediocris S"), hjust = -1.58) +
geom_tiplab(offset = .004) +
geom_tiplab(aes(subset = (node == 6), label = "loveridgei"), hjust = -1.93) +
geom_cladelabel(node = 28, label = "usambarica", align = T, offset = .017) +
geom_cladelabel(node = 23, label = "fuelleborni", align = T, offset = .017) +
geom_cladelabel(node = 19, label = "moreaui", align = T, offset = .017) +
geom_point2(aes(subset=(node==29), x = branch), size=0.542*7, shape=23, fill="#0072B2", alpha = 0.7) +
geom_text2(aes(subset=(node==29), x = branch, label = paste(round(support, 2), "*", sep = "")), nudge_x = 0, nudge_y = .43) +
geom_point2(aes(subset=(node==23), x = branch), size=0.874*7, shape=23, fill="#0072B2", alpha = 0.7) +
geom_text2(aes(subset=(node==23), x = branch, label = paste(round(support, 2), "*", sep = "")), nudge_x = 0, nudge_y = .43) +
annotate(geom = "text", x = 0.013, y = 4.3, label = "Median pause duration") +
geom_rootpoint(shape = 95, size = 6)
p <- p %<+% data + geom_tippoint(aes(x = x + 0.002, size = median_pause_duration), alpha = 0.5)
p + theme(legend.position = c(.15, .14), legend.title = element_blank())
dev.off()
####Median element duration
data <- read.csv("/Users/jaymcentee/Dropbox/Chapter1/song_data_files/ind.median.element.duration.pop.csv", header = 0)
colnames(data) <- c("pop", "median_element_duration", "var_median_element_duration")
data$pop <- as.character(data$pop)
data$pop[which(data$pop == "SouthPare")] <- "Shengena"
phy1 <- read.newick("~/Dropbox/Chapter1/final_analyses/boat/UPGMA_song_match_2_fakesupports.nwk",
node.label = "support")
df <- phy1@data
#
df2 <- merge(df, edge, by.x = "node", by.y = "V1", all.x = F, all.y = T)
df3 <- df2[, c(3,2)]
colnames(df3) = colnames(df)
df4 <- rbind(df3, df)
df4 <- df4[order(df4$node),]
df4$support <- pulses$Median_element_duration
df4 <- as_tibble(df4)
phy1@data <- df4
png(filename = "median_element_duration_pulse_support_tree2.png", width = 7, height = 7, units = "in", res = 600)
p <- ggtree(phy1, ladderize = F) + xlim(0, 0.1) +
geom_tiplab(aes(subset = (node == 15), label = "mediocris N"), hjust = -1.58) +
geom_tiplab(aes(subset = (node == 14), label = "mediocris S"), hjust = -1.58) +
geom_tiplab(offset = .004) +
geom_tiplab(aes(subset = (node == 6), label = "loveridgei"), hjust = -1.93) +
geom_cladelabel(node = 28, label = "usambarica", align = T, offset = .017) +
geom_cladelabel(node = 23, label = "fuelleborni", align = T, offset = .017) +
geom_cladelabel(node = 19, label = "moreaui", align = T, offset = .017) +
geom_point2(aes(subset=(node==29), x = branch), size=0.327*7, shape=23, fill="#0072B2", alpha = 0.7) +
geom_text2(aes(subset=(node==29), x = branch, label = round(support, 2)), nudge_x = 0, nudge_y = .43) +
geom_point2(aes(subset=(node==23), x = branch), size=0.807*7, shape=23, fill="#0072B2", alpha = 0.7) +
geom_text2(aes(subset=(node==23), x = branch, label = paste(round(support, 2), "*", sep = "")), nudge_x = 0, nudge_y = .43) +
geom_point2(aes(subset=(node==24), x = branch), size=0.218*7, shape=23, fill="#0072B2", alpha = 0.7) +
geom_text2(aes(subset=(node==24), x = branch, label = round(support, 2)), nudge_x = 0, nudge_y = .43) +
annotate(geom = "text", x = 0.013, y = 4.3, label = "Median element duration") +
geom_rootpoint(shape = 95, size = 6)
p <- p %<+% data + geom_tippoint(aes(x = x + 0.002, size = median_element_duration), alpha = 0.5)
p + theme(legend.position = c(.15, .16), legend.title = element_blank())
dev.off()
####Range peak frequency
data <- read.csv("/Users/jaymcentee/Dropbox/Chapter1/song_data_files/ind.range.peak.frequency.pop.csv", header = 0)
colnames(data) <- c("pop", "range_peak_frequency", "var_range_peak_frequency")
data$pop <- as.character(data$pop)
data$pop[which(data$pop == "SouthPare")] <- "Shengena"
phy1 <- read.newick("~/Dropbox/Chapter1/final_analyses/boat/UPGMA_song_match_2_fakesupports.nwk",
node.label = "support")
df <- phy1@data
#
df2 <- merge(df, edge, by.x = "node", by.y = "V1", all.x = F, all.y = T)
df3 <- df2[, c(3,2)]
colnames(df3) = colnames(df)
df4 <- rbind(df3, df)
df4 <- df4[order(df4$node),]
df4$support <- pulses$Range_peak_frequency
df4 <- as_tibble(df4)
phy1@data <- df4
png(filename = "range_peak_frequency_pulse_support_tree2.png", width = 7, height = 7, units = "in", res = 600)
p <- ggtree(phy1, ladderize = F) + xlim(0, 0.1) +
geom_tiplab(aes(subset = (node == 15), label = "mediocris N"), hjust = -1.58) +
geom_tiplab(aes(subset = (node == 14), label = "mediocris S"), hjust = -1.58) +
geom_tiplab(offset = .004) +
geom_tiplab(aes(subset = (node == 6), label = "loveridgei"), hjust = -1.93) +
geom_cladelabel(node = 28, label = "usambarica", align = T, offset = .017) +
geom_cladelabel(node = 23, label = "fuelleborni", align = T, offset = .017) +
geom_cladelabel(node = 19, label = "moreaui", align = T, offset = .017) +
geom_point2(aes(subset=(node==23), x = branch), size=0.974*7, shape=23, fill="#0072B2", alpha = 0.7) +
geom_text2(aes(subset=(node==23), x = branch, label = paste(round(support, 2), "*", sep = "")), nudge_x = 0, nudge_y = .43) +
annotate(geom = "text", x = 0.013, y = 4.3, label = "Range peak frequency") +
geom_rootpoint(shape = 95, size = 6)
p <- p %<+% data + geom_tippoint(aes(x = x + 0.002, size = range_peak_frequency), alpha = 0.5)
p + theme(legend.position = c(.15, .12), legend.title = element_blank())
dev.off()
####CV peak frequency
data <- read.csv("/Users/jaymcentee/Dropbox/Chapter1/song_data_files/ind.co.var.peak.frequency.pop.csv", header = 0)
colnames(data) <- c("pop", "CV_peak_frequency", "var_CV_peak_frequency")
data$pop <- as.character(data$pop)
data$pop[which(data$pop == "SouthPare")] <- "Shengena"
phy1 <- read.newick("~/Dropbox/Chapter1/final_analyses/boat/UPGMA_song_match_2_fakesupports.nwk",
node.label = "support")
df <- phy1@data
#
df2 <- merge(df, edge, by.x = "node", by.y = "V1", all.x = F, all.y = T)
df3 <- df2[, c(3,2)]
colnames(df3) = colnames(df)
df4 <- rbind(df3, df)
df4 <- df4[order(df4$node),]
df4$support <- pulses$CV_peak_frequency
df4 <- as_tibble(df4)
phy1@data <- df4
png(filename = "CV_peak_frequency_pulse_support_tree2.png", width = 7, height = 7, units = "in", res = 600)
p <- ggtree(phy1, ladderize = F) + xlim(0, 0.1) +
geom_tiplab(aes(subset = (node == 15), label = "mediocris N"), hjust = -1.58) +
geom_tiplab(aes(subset = (node == 14), label = "mediocris S"), hjust = -1.58) +
geom_tiplab(offset = .004) +
geom_tiplab(aes(subset = (node == 6), label = "loveridgei"), hjust = -1.93) +
geom_cladelabel(node = 28, label = "usambarica", align = T, offset = .017) +
geom_cladelabel(node = 23, label = "fuelleborni", align = T, offset = .017) +
geom_cladelabel(node = 19, label = "moreaui", align = T, offset = .017) +
geom_point2(aes(subset=(node==23), x = branch), size=0.978*7, shape=23, fill="#0072B2", alpha = 0.7) +
geom_text2(aes(subset=(node==23), x = branch, label = paste(round(support, 2), "*", sep = "")), nudge_x = 0, nudge_y = .43) +
annotate(geom = "text", x = 0.013, y = 4.3, label = "CV peak frequency") +
geom_rootpoint(shape = 95, size = 6)
p <- p %<+% data + geom_tippoint(aes(x = x + 0.002, size = CV_peak_frequency), alpha = 0.5)
p + theme(legend.position = c(.15, .16), legend.title = element_blank())
dev.off()
####Log number elements
data <- read.csv("/Users/jaymcentee/Dropbox/Chapter1/song_data_files/log.ind.elements.pop.csv", header = 0)
colnames(data) <- c("pop", "log_number_elements", "var_log_number_elements")
data$pop <- as.character(data$pop)
data$pop[which(data$pop == "SouthPare")] <- "Shengena"
phy1 <- read.newick("~/Dropbox/Chapter1/final_analyses/boat/UPGMA_song_match_2_fakesupports.nwk",
node.label = "support")
df <- phy1@data
#
df2 <- merge(df, edge, by.x = "node", by.y = "V1", all.x = F, all.y = T)
df3 <- df2[, c(3,2)]
colnames(df3) = colnames(df)
df4 <- rbind(df3, df)
df4 <- df4[order(df4$node),]
df4$support <- pulses$Log_elements
df4 <- as_tibble(df4)
phy1@data <- df4
png(filename = "Log_number_elements_pulse_support_tree2.png", width = 7, height = 7, units = "in", res = 600)
p <- ggtree(phy1, ladderize = F) + xlim(0, 0.1) +
geom_tiplab(aes(subset = (node == 15), label = "mediocris N"), hjust = -1.58) +
geom_tiplab(aes(subset = (node == 14), label = "mediocris S"), hjust = -1.58) +
geom_tiplab(offset = .004) +
geom_tiplab(aes(subset = (node == 6), label = "loveridgei"), hjust = -1.93) +
geom_cladelabel(node = 28, label = "usambarica", align = T, offset = .017) +
geom_cladelabel(node = 23, label = "fuelleborni", align = T, offset = .017) +
geom_cladelabel(node = 19, label = "moreaui", align = T, offset = .017) +
geom_point2(aes(subset=(node==15), x = branch), size=0.519*7, shape=23, fill="#0072B2", alpha = 0.7) +
geom_text2(aes(subset=(node==15), x = branch, label = paste(round(support, 2), "*", sep = "")), nudge_x = 0, nudge_y = .43) +
annotate(geom = "text", x = 0.013, y = 4.3, label = "Log number elements") +
geom_rootpoint(shape = 95, size = 6)
p <- p %<+% data + geom_tippoint(aes(x = x + 0.002, size = log_number_elements), alpha = 0.5)
p + theme(legend.position = c(.15, .16), legend.title = element_blank())
dev.off()
####Median peak frequency
data <- read.csv("/Users/jaymcentee/Dropbox/Chapter1/song_data_files/ind.median.peak.frequency.pop.csv", header = 0)
colnames(data) <- c("pop", "median_peak_frequency", "var_median_peak_frequency")
data$pop <- as.character(data$pop)
data$pop[which(data$pop == "SouthPare")] <- "Shengena"
phy1 <- read.newick("~/Dropbox/Chapter1/final_analyses/boat/UPGMA_song_match_2_fakesupports.nwk",
node.label = "support")
df <- phy1@data
#
df2 <- merge(df, edge, by.x = "node", by.y = "V1", all.x = F, all.y = T)
df3 <- df2[, c(3,2)]
colnames(df3) = colnames(df)
df4 <- rbind(df3, df)
df4 <- df4[order(df4$node),]
df4$support <- pulses$Median_peak_frequency
df4 <- as_tibble(df4)
phy1@data <- df4
png(filename = "Median_peak_frequency_pulse_support_tree2.png", width = 7, height = 7, units = "in", res = 600)
p <- ggtree(phy1, ladderize = F) + xlim(0, 0.1) +
geom_tiplab(aes(subset = (node == 15), label = "mediocris N"), hjust = -1.58) +
geom_tiplab(aes(subset = (node == 14), label = "mediocris S"), hjust = -1.58) +
geom_tiplab(offset = .004) +
geom_tiplab(aes(subset = (node == 6), label = "loveridgei"), hjust = -1.93) +
geom_cladelabel(node = 28, label = "usambarica", align = T, offset = .017) +
geom_cladelabel(node = 23, label = "fuelleborni", align = T, offset = .017) +
geom_cladelabel(node = 19, label = "moreaui", align = T, offset = .017) +
geom_point2(aes(subset=(node==6), x = branch), size=0.983*7, shape=23, fill="#0072B2", alpha = 0.7) +
geom_text2(aes(subset=(node==6), x = branch, label = paste(round(support, 2), "*", sep = "")), nudge_x = 0, nudge_y = .43) +
annotate(geom = "text", x = 0.013, y = 4.3, label = "Median peak frequency") +
geom_rootpoint(shape = 95, size = 6)
p <- p %<+% data + geom_tippoint(aes(x = x + 0.002, size = median_peak_frequency), alpha = 0.5)
p + theme(legend.position = c(.15, .16), legend.title = element_blank())
dev.off()
?round
rm(list = ls())
require(plotrix)
require(ggplot2)
require(cowplot)
setwd("/Users/jaymcentee/Dropbox/tailorbird etc/analyses/")
data <- read.csv("Artisornis_duet_scoring_Jun172021.csv")
dim(data)
data <- subset(data, data$Duet..Y.N. == "Y")
dim(data)
setwd("/Users/jaymcentee/Dropbox/tailorbird etc/analyses/")
###########NEED TO REMOVE ACCIDENTAL MEASUREMENT TABLES THAT ARE TOO SHORT FROM NOTES IN SONGS################
####Idea for using order of notes is that we can use ADJACENT notes to capture variance. Perhaps use an additional covariate that is the number of the first of a note pair in the sequence. Or we could include first note as a category that is included as a random effect. This is probably the way to go.
##Read in data
data <- read.csv("Artisornis_duet_scoring_Jun172021.csv")
colnames(data)
table(data$Duet..Y.N.)
data <- subset(data, data$Duet..Y.N. == "Y")
table(data$Species)
moreaui <- subset(data, data$Species == "Artisornis moreaui")
metopias <- subset(data, data$Species == "Artisornis metopias")
hist(moreaui$Num.of.male.elements)
##male number of elements is slightly bimodal and right-skewed
hist(moreaui$Num.of.female.elements)
##female number of elements is unimodal and right-skewed
sum(moreaui$Delta_male_female > 0)/length(moreaui$Delta_male_female) ##90
sum(moreaui$Delta_male_female > 0)
moreaui$Delta_male_female > 0
setwd("/Users/jaymcentee/Dropbox/tailorbird etc/analyses/")
###########NEED TO REMOVE ACCIDENTAL MEASUREMENT TABLES THAT ARE TOO SHORT FROM NOTES IN SONGS################
####Idea for using order of notes is that we can use ADJACENT notes to capture variance. Perhaps use an additional covariate that is the number of the first of a note pair in the sequence. Or we could include first note as a category that is included as a random effect. This is probably the way to go.
##Read in data
data <- read.csv("Artisornis_duet_scoring_Jul222021.csv")
dim(data)
table(data$Duet..Y.N.)
data <- subset(data, data$Duet..Y.N. == "Y")
table(data$Species)
moreaui <- subset(data, data$Species == "Artisornis moreaui")
metopias <- subset(data, data$Species == "Artisornis metopias")
sum(moreaui$Delta_male_female > 0)/length(moreaui$Delta_male_female) ##90
moreaui$Delta_male_female > 0
tail(moreaui)
data$Delta_male_female <- data$Time.female.start..s. - data$Time.male.start..s.
moreaui <- subset(data, data$Species == "Artisornis moreaui")
metopias <- subset(data, data$Species == "Artisornis metopias")
sum(moreaui$Delta_male_female > 0)/length(moreaui$Delta_male_female) ##90
length(moreaui$Delta_male_female)
sum(moreaui$Delta_male_female > 0)
sum(metopias$Delta_male_female > 0)
length(metopias$Delta_male_female)
sum(metopias$Delta_male_female > 0)/length(metopias$Delta_male_female)
data$latency <- abs(data$Delta_male_female)
moreaui <- subset(data, data$Species == "Artisornis moreaui")
metopias <- subset(data, data$Species == "Artisornis metopias")
median(metopias$latency)
median(moreaui$latency)
hist(data$latency)
hist(data$latency, breaks = 10)
hist(data$latency, breaks = 20)
mean(moreaui$Num.of.male.elements)
std.error(moreaui$Num.of.male.elements)
?std.error
??std.error
require(plotrix)
plotrix::std.error(moreaui$Num.of.male.elements)
mean(moreaui$Num.of.female.elements)
plotrix::std.error(moreaui$Num.of.female.elements)
mean(metopias$Num.of.male.elements) ##
plotrix::std.error(metopias$Num.of.male.elements) ##
mean(metopias$Num.of.female.elements) ##
plotrix::std.error(metopias$Num.of.female.elements)##
data$m_fraction_overlapped <- data$Num.of.male.elements.overlapped.by.female.elements/data$Num.of.male.elements
moreaui <- subset(data, data$Species == "Artisornis moreaui")
metopias <- subset(data, data$Species == "Artisornis metopias")
mean(moreaui$m_fraction_overlapped)
hist(moreaui$m_fraction_overlapped)
plotrix::std.error(moreaui$m_fraction_overlapped)
mean(metopias$m_fraction_overlapped) ##0.381413
plotrix::std.error(metopias$m_fraction_overlapped)##0.02039791
(mean(moreaui$m_fraction_overlapped)*(1-mean(moreaui$m_fraction_overlapped))/length(moreaui$m_fraction_overlapped))^0.5
(mean(metopias$m_fraction_overlapped)*(1-mean(metopias$m_fraction_overlapped))/length(metopias$m_fraction_overlapped))^0.5
require(plotrix)
require(ggplot2)
require(cowplot)
require(magrittr)
require(dplyr)
##Set working directory
setwd("/Users/jaymcentee/Dropbox/tailorbird etc/analyses/")
data <- read.csv("Artisornis_duet_scoring_Jun172021.csv")
data$Locality <- as.character(data$Locality)
data$Population <- as.character(data$Population)
##Subset data (in effect, clean up the rows)
data <- data[which(complete.cases(data$Num.of.male.elements)),]
data$Male.measurement.order <- as.character(data$Male.measurement.order)
data$Female.Measurement.order <- as.character(data$Female.Measurement.order)
data$Locality[which(data$Locality == "Within 100m of Njesi Camp, Njesi Forest, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi Camp 2011"
data$Locality[which(data$Locality == "30-50m N Njesi Camp, Njesi Plateau, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi Camp 2011"
data$Locality[which(data$Locality == "50m N Njesi Camp, Njesi Plateau, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi Camp 2011"
data$Locality[which(data$Locality == "60-70m E of Njesi Camp, Njesi Plateau, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi Camp 2011"
data$Locality[which(data$Locality == "60m ENE of Njesi Camp, Njesi Plateau, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi Camp 2011"
data$Locality[which(data$Locality == "Njesi A, Njesi Plateau, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi Camp 2011"
data$Locality[which(data$Locality == "Njesi A, Njesi Plateau, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi Camp 2011"
data$Locality[which(data$Locality == "Njesi B, Njesi Plateau, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi Camp 2011"
data$Locality[which(data$Locality == "100-150m W of Njesi Camp, Njesi Plateau, Sanga District, Niassa Province, Mozambique")] <- "Njesi C"
data$Locality[which(data$Locality == "Njesi E, Njesi Forest, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi D"
table(data$Species)
moreaui <- subset(data, data$Species == "Artisornis moreaui")
metopias <- subset(data, data$Species == "Artisornis metopias")
setwd("/Users/jaymcentee/Dropbox/tailorbird etc/measurements/moreaui_measurements/")
##Find any measurement tables that do not have corresponding data rows in the data frame called data (and correspondingly in the Artisornis_duet_scoring spreadsheet)
selections <- list.files()
song_names <- as.character(data$Song)
moreaui_matches <- c()
for (i in 1:length(selections)){
selection_song <- strsplit(selections[i], split = ".Table", fixed = TRUE)[[1]][1]
moreaui_matches[i] <- selection_song %in% song_names
}
moreaui_mismatches <- selections[which(moreaui_matches == FALSE)]
head(moreaui)
sum(is.na(moreaui$Male.measurement.order))
sum(is.na(moreaui$Female.measurement.order))
moreaui$Female.Measurement.order
class(moreaui$Female.Measurement.order)
class(moreaui$Male.measurement.order)
rm(list = ls())
require(plotrix)
require(ggplot2)
require(cowplot)
require(magrittr)
require(dplyr)
setwd("/Users/jaymcentee/Dropbox/tailorbird etc/analyses/")
data <- read.csv("Artisornis_duet_scoring_Jun172021.csv")
data$Locality <- as.character(data$Locality)
data$Population <- as.character(data$Population)
data <- data[which(complete.cases(data$Num.of.male.elements)),]
data$Male.measurement.order <- as.character(data$Male.measurement.order)
data$Female.Measurement.order <- as.character(data$Female.Measurement.order)
data <- read.csv("Artisornis_duet_scoring_Jun172021.csv")
data$Locality <- as.character(data$Locality)
data$Population <- as.character(data$Population)
data <- read.csv("Artisornis_duet_scoring_Jul222021.csv")
dim(data)
data$Locality <- as.character(data$Locality)
data$Population <- as.character(data$Population)
data <- data[which(complete.cases(data$Num.of.male.elements)),]
data$Male.measurement.order <- as.character(data$Male.measurement.order)
data$Female.Measurement.order <- as.character(data$Female.Measurement.order)
dim(data)
data$Locality[which(data$Locality == "Within 100m of Njesi Camp, Njesi Forest, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi Camp 2011"
data$Locality[which(data$Locality == "30-50m N Njesi Camp, Njesi Plateau, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi Camp 2011"
data$Locality[which(data$Locality == "50m N Njesi Camp, Njesi Plateau, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi Camp 2011"
data$Locality[which(data$Locality == "60-70m E of Njesi Camp, Njesi Plateau, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi Camp 2011"
data$Locality[which(data$Locality == "60m ENE of Njesi Camp, Njesi Plateau, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi Camp 2011"
data$Locality[which(data$Locality == "Njesi A, Njesi Plateau, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi Camp 2011"
data$Locality[which(data$Locality == "Njesi A, Njesi Plateau, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi Camp 2011"
data$Locality[which(data$Locality == "Njesi B, Njesi Plateau, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi Camp 2011"
data$Locality[which(data$Locality == "100-150m W of Njesi Camp, Njesi Plateau, Sanga District, Niassa Province, Mozambique")] <- "Njesi C"
data$Locality[which(data$Locality == "Njesi E, Njesi Forest, Malulo-Cal Village, Sanga District, Niassa Province, Mozambique")] <- "Njesi D"
table(data$Species)
moreaui <- subset(data, data$Species == "Artisornis moreaui")
metopias <- subset(data, data$Species == "Artisornis metopias")
setwd("/Users/jaymcentee/Dropbox/tailorbird etc/measurements/moreaui_measurements/")
selections <- list.files()
song_names <- as.character(data$Song)
moreaui_matches <- c()
for (i in 1:length(selections)){
selection_song <- strsplit(selections[i], split = ".Table", fixed = TRUE)[[1]][1]
moreaui_matches[i] <- selection_song %in% song_names
}
moreaui_mismatches <- selections[which(moreaui_matches == FALSE)]
selections <- list.files()
song_names <- as.character(data$Song)
moreaui_matches <- c()
for (i in 1:length(selections)){
selection_song <- strsplit(selections[i], split = ".Table", fixed = TRUE)[[1]][1]
moreaui_matches[i] <- selection_song %in% song_names
}
moreaui_mismatches <- selections[which(moreaui_matches == FALSE)]
moreaui.ordered <- moreaui[!which(is.na(moreaui$Male.measurement.order)),]
sum(is.na(moreaui$Male.measurement.order))
moreaui[which(is.na(moreaui$Male.measurement.order)),]
oreaui.ordered <- moreaui[which(!is.na(moreaui$Male.measurement.order)),]
moreaui.ordered <- moreaui[which(!is.na(moreaui$Male.measurement.order)),]
oreaui.ordered <- NULL
for (i in 1:length(moreaui.ordered[,1])){
moreaui.ordered$last_note_measured[i] <- max(as.integer(strsplit(moreaui.ordered$Male.measurement.order[i], split = ",", fixed = TRUE)[[1]]))
}
head(moreaui.ordered)
rate.df.moreaui <- moreaui.ordered[which(moreaui.ordered$Num.of.male.elements == moreaui.ordered$last_note_measured),]
head(rate.df.moreaui)
df.moreaui <- read.delim(list.files()[1])
df.moreaui <- subset(df.moreaui, df.moreaui$View == "Spectrogram 1")
df.moreaui$name <- list.files()[1]
num_notes <- length(df.moreaui[,1])
for (i in 1:num_notes){
df.moreaui$sex[i] <- strsplit(tail(unlist(strsplit(df.moreaui$name[i], split = "_", fixed = TRUE)),n = 1), split = ".", fixed =TRUE)[[1]][1]
}
for (i in 1:length(df.moreaui$name)){
df.moreaui$song[i] <- strsplit(df.moreaui$name[i], split = ".Table", fixed = TRUE)[[1]][1]
#  data_for_i <- data[which(data$Song == df.moreaui$song[i]),]
#  if(df$sex[i] == "f"){
#    df$order_in_song[i] <- as.numeric(strsplit(data_for_i$Female.Measurement.order, split = ",", fixed = TRUE)[[1]][i])
#    }else{
#    df$order_in_song[i] <- as.numeric(strsplit(data_for_i$Male.measurement.order, split = ",", fixed = TRUE)[[1]][i])
#  }
}
for(i in 2:length(list.files())){
d <- read.delim(list.files()[i])
d <- subset(d, d$View == "Spectrogram 1")
d$name <- list.files()[i]
num_notes <- length(d[,1])
for (j in 1:num_notes){
d$sex[j] <- strsplit(tail(unlist(strsplit(d$name[j], split = "_", fixed = TRUE)),n = 1), split = ".", fixed =TRUE)[[1]][1]
}
for (k in 1:length(d$name)){
d$song[k] <- strsplit(d$name[k], split = ".Table", fixed = TRUE)[[1]][1]
# data_for_k <- data[which(data$Song == d$song[k]),]
# if(d$sex[k] == "f"){
# d$order_in_song[k] <- as.numeric(strsplit(data_for_k$Female.Measurement.order, split = ",", fixed = TRUE)[[1]][k])
# }else{
# d$order_in_song[k] <- as.numeric(strsplit(data_for_k$Male.measurement.order, split = ",", fixed = TRUE)[[1]][k])
}
df.moreaui <- rbind(df.moreaui, d)
}
##uncommented loop above throwing an error with i = 56. No row in data corresponding to song called "artisornis.moreaui_aug042011_njesi_jpm_c_0.05"
##2279 notes measured by SP for moreaui
##Need to cut down to those with narrrow locality given in data
df.moreaui <- df.moreaui[which(df.moreaui$song %in% data$Song),]
head(df.moreaui)
df.moreaui$sex <- rep(NA,length(df.moreaui$name))
for (i in 1:length(df.moreaui$sex)){
df.moreaui$sex[i] <- strsplit(tail(unlist(strsplit(df.moreaui$name[i], split = "_", fixed = TRUE)),n = 1), split = ".", fixed =TRUE)[[1]][1]
}
df.moreaui$locality <- rep(NA, length(df.moreaui$song))
df.moreaui$population <- rep(NA, length(df.moreaui$song))
class(df.moreaui$locality) <- "character"
for (i in 1:length(df.moreaui$song)){
#df.moreaui$locality[i] <- strsplit(df.moreaui$song[i], split = "_", fixed = TRUE)[[1]][3]
df.moreaui$locality[i] <- data$Locality[which(data$Song == df.moreaui$song[i])]
df.moreaui$population[i] <- data$Population[which(data$Song == df.moreaui$song[i])]
}
View(df.moreaui)
df.moreaui <- df.moreaui[which(df.moreaui$song %in% data$Song),]
male.moreaui.ordered <- moreaui[which(!is.na(moreaui$Male.measurement.order)),]
for (i in 1:length(moreaui.ordered[,1])){
male.moreaui.ordered$last_note_measured[i] <- max(as.integer(strsplit(male.moreaui.ordered$Male.measurement.order[i], split = ",", fixed = TRUE)[[1]]))
}
male.df.moreaui <- male.moreaui.ordered[which(male.moreaui.ordered$Num.of.male.elements == male.moreaui.ordered$last_note_measured),]
female.moreaui.ordered <- moreaui[which(!is.na(moreaui$Female.measurement.order)),]
for (i in 1:length(moreaui.ordered[,1])){
female.moreaui.ordered$last_note_measured[i] <- max(as.integer(strsplit(female.moreaui.ordered$Feale.measurement.order[i], split = ",", fixed = TRUE)[[1]]))
}
female.df.moreaui <- female.moreaui.ordered[which(female.moreaui.ordered$Num.of.male.elements == female.moreaui.ordered$last_note_measured),]
female.moreaui.ordered <- moreaui[which(!is.na(moreaui$Female.measurement.order)),]
for (i in 1:length(moreaui.ordered[,1])){
female.moreaui.ordered$last_note_measured[i] <- max(as.integer(strsplit(female.moreaui.ordered$Female.measurement.order[i], split = ",", fixed = TRUE)[[1]]))
}
female.df.moreaui <- female.moreaui.ordered[which(female.moreaui.ordered$Num.of.male.elements == female.moreaui.ordered$last_note_measured),]
class(female.moreaui.ordered$Female.Measurement.order)
female.moreaui.ordered <- moreaui[which(!is.na(moreaui$Female.measurement.order)),]
for (i in 1:length(female.moreaui.ordered[,1])){
female.moreaui.ordered$last_note_measured[i] <- max(as.integer(strsplit(female.moreaui.ordered$Female.measurement.order[i], split = ",", fixed = TRUE)[[1]]))
}
female.df.moreaui <- female.moreaui.ordered[which(female.moreaui.ordered$Num.of.male.elements == female.moreaui.ordered$last_note_measured),]
female.moreaui.ordered <- moreaui[which(!is.na(moreaui$Female.measurement.order)),]
class(moreaui$Female.Measurement.order)
head(moreaui$Female.Measurement.order)
is.na(moreaui$Female.Measurement.order[1])
moreaui[which(is.na(moreaui$Female.measurement.order)),]
dim(moreaui)
female.moreaui.ordered <- moreaui[which(!is.na(moreaui$Female.Measurement.order)),]
for (i in 1:length(female.moreaui.ordered[,1])){
female.moreaui.ordered$last_note_measured[i] <- max(as.integer(strsplit(female.moreaui.ordered$Female.Measurement.order[i], split = ",", fixed = TRUE)[[1]]))
}
female.df.moreaui <- female.moreaui.ordered[which(female.moreaui.ordered$Num.of.male.elements == female.moreaui.ordered$last_note_measured),]
View(female.moreaui.ordered)
